// Generated by CoffeeScript 1.4.0
var SiteContentView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

SiteContentView = (function(_super) {

  __extends(SiteContentView, _super);

  function SiteContentView(el, model, params) {
    var key, val;
    this.el = el;
    this.model = model;
    if (params == null) {
      params = {};
    }
    SiteContentView.__super__.constructor.call(this, this.model);
    for (key in params) {
      val = params[key];
      this[key] = val;
    }
    this.content = new_dom_element({
      id: "content",
      className: "content",
      parentNode: this.el
    });
    this.render();
  }

  SiteContentView.prototype.create_unit_view = function(item) {
    var col, panel, row;
    if (item instanceof TitleModel) {
      new TitleView(item, this.content);
    }
    if (item instanceof RowModel) {
      new RowView(item, this.content);
    }
    if (item instanceof ColModel) {
      row = document.getElementById(item.row_id);
      new ColView(item, row);
    }
    if (item instanceof PanelModel) {
      col = document.getElementById(item.col_id);
      new PanelView(item, col);
    }
    if (item instanceof IFrameModel) {
      col = document.getElementById(item.col_id);
      new IFrameView(item, col);
    }
    if (item instanceof ParagraphModel) {
      panel = document.getElementById(item.panel_id);
      new ParagraphView(item, panel);
    }
    if (item instanceof HeadingModel) {
      panel = document.getElementById(item.panel_id);
      new HeadingView(item, panel);
    }
    if (item instanceof ImageModel) {
      panel = document.getElementById(item.panel_id);
      new ImageView(item, panel);
    }
    if (item instanceof GalleryModel) {
      panel = document.getElementById(item.panel_id);
      new GalleryView(item, panel);
    }
    if (item instanceof CodeModel) {
      panel = document.getElementById(item.panel_id);
      new CodeView(item, panel);
    }
    if (item instanceof TreeModel) {
      panel = document.getElementById(item.panel_id);
      new TreeView(item, panel);
    }
    if (item instanceof TableModel) {
      panel = document.getElementById(item.panel_id);
      return new TableView(item, panel);
    }
  };

  SiteContentView.prototype.render = function() {
    var item, _i, _len, _ref, _results;
    _ref = this.model.content;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      _results.push(this.create_unit_view(item));
    }
    return _results;
  };

  return SiteContentView;

})(Process);
